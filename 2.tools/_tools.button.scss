/**
 ******************************************************************************
 *** BUTTON TOOLS ***
 ******************************************************************************
 *
 * Button Tool provides a simple button style for actions. You can import it
 * whenever you want to use, example: for an `<input[type="submit"]>` or an
 * `<a class="c-button">` elements.
 * You can find many configurable options. There are 2 mixins:
 *   - button-base: only basic, no theming; you can built your own button style
 *   - default-button: default theme for buttons
 * For different button styles and sizes use the Button Component from
 * `5.components/_components.button`.
 *
 * Based on Spectre.css
 * @author Yan Zhu <picturepan2@hotmail.com>
 * @author Krisztian Pinter <krisz@keeteean.com>
 * @link https://picturepan2.github.io/spectre/elements.html#buttons
 */


/**
 ** Settings **
 */

/**
 * Button typography
 */

$tools-button-font-size                   : $type-12 !default;
$tools-button-font-weight                 : $font-weight--bold !default;
$tools-button-line-height                 : 1.2 !default; // for smaller screens
$tools-button-line-height--large          : 1.4 !default; // for larger screens
$tools-button-letter-spacing              : .2em !default;
$tools-button-text-align                  : center !default;
$tools-button-text-transform              : uppercase !default;


/**
 * Button block
 */

$tools-button-padding                     : 1rem 1.6rem !default; // for smaller screens
$tools-button-padding--large              : 1.4rem 3.2rem !default; // for larger screens
$tools-button-shadow                      : none !default;


/**
 * Button colors
 */

$tools-button-color                       : white !default;
$tools-button-background                  : $color-primary !default;


/**
 * Button border
 */

$tools-button-border-color                : $tools-button-background !default;
$tools-button-border-style                : solid !default;
$tools-button-border-width                : .2rem !default;
$tools-button-border-radius               : .5rem !default;


/**
 * Button transition
 */

$tools-button-transition-time             : 300ms !default;


/**
 * Button states
 */

$tools-button-hover-background            : adjust-hue($tools-button-background, 5%);
$tools-button-hover-border-color          : adjust-hue($tools-button-border-color, 5%);
$tools-button-disabled-opacity            : .5 !default;


/**
 * Animated Button
 *
 * Turn on this setting if you want to use animated button.
 *
 * @type Boolean
 */

$base-button-animated                     : false !default;


/**
 * Animated state
 *
 * Only applied when $base-button-animated setting is true.
 */

// hover state: mouse over
$tools-button-animated-hover-transform    : translateY(-.3rem) !default;
$tools-button-animated-hover-shadow       : 0 1rem 2rem rgba(black, .2) !default;

// active state: pushed down
$tools-button-animated-active-transform   : translateY(-.1rem) !default;
$tools-button-animated-active-shadow      : 0 .5rem 1rem rgba(black, .2) !default;


/**
 ** helper mixins **
 */

/**
 * Button transition mixin
 *
 * General css transition for button.
 *
 * @type Mixin
 */

@mixin button-transition {
  transition: all $tools-button-transition-time ease;
}


/**
 * Disabled button mixin
 *
 * Generate disabled state of button.
 *
 * @type Mixin
 */

@mixin button-disabled {
  cursor: default;
  pointer-events: none;
  opacity: $tools-button-disabled-opacity;
}


/**
 * Button base mixin
 *
 * No theming rules only base styles.
 *
 * @type Mixin
 * @require {mixin} button-transition
 * @require {mixin} button-disabled
 */

@mixin button-base {
  @include button-transition;

  display: inline-block;
  -webkit-appearance: none;
  -moz-appearance: none;
  padding: $tools-button-padding;
  border: $tools-button-border-width $tools-button-border-style transparent;
  cursor: pointer;
  font-size: $tools-button-font-size;
  font-weight: $tools-button-font-weight;
  line-height: $tools-button-line-height;
  letter-spacing: $tools-button-letter-spacing;
  text-align: $tools-button-text-align;
  text-decoration: none;

  @include breakpoint(medium) {
    padding: $tools-button-padding--large;
    line-height: $tools-button-line-height--large;
  }
}


/**
 * Default button mixin
 *
 * Based on button-base mixin with default styles.
 *
 * @require {mixin} button-base
 */

@mixin default-button {
  @include button-base;
  @include colors($tools-button-color, $tools-button-background);

  border-color: $tools-button-border-color;
  border-radius: $tools-button-border-radius;
  text-transform: $tools-button-text-transform;
  box-shadow: $tools-button-shadow;

  @if ($base-button-animated == true) {
    &:hover {
      transform: $tools-button-animated-hover-transform;
      box-shadow: $tools-button-animated-hover-shadow;
    }

    &:active {
      transform: $tools-button-animated-active-transform;
      box-shadow: $tools-button-animated-active-shadow;
    }
  }

  &[disabled],
  &:disabled {
    @include button-disabled;
  }

  &:hover,
  &:focus {
    border-color: $tools-button-hover-border-color;
    background: $tools-button-hover-background;
  }

  &:focus {
    outline: none;
  }
}


/**
 * Ghost button mixin
 *
 * @type Mixin
 * @parameter {string} $text-color - Color of text and border by default then background on hover.
 * @parameter {string} $text-color--accent - Color of text on hover.
 */

@mixin ghost-button($text-color, $text-color--accent) {
  color: $text-color;
  border-color: $text-color;
  background-color: transparent;

  &:hover,
  &:focus {
    color: $text-color--accent;
    border-color: transparent;
    background-color: $text-color;
  }
}
