/**
 ******************************************************************************
 *** CSS BOX-MODEL TOOL ***
 ******************************************************************************
 *
 * CSS Box-model-related mixins.
 *
 * @author Krisztian Pinter <krisz@keeteean.com>
 */


/**
 * Square mixin
 *
 * Use it, when you need similar width and height with square shape.
 *
 * @parameter {string} $value - Amount of desired width and height in any unit.
 *
 * @example
 *   @include square(6rem);
 */

@mixin square($value) {
  width: $value;
  height: $value;
}


/**
 * Circle mixin
 *
 * Use it, when you need similar width and height width circle shape.
 *
 * @parameter {string} $value - Amount of desired width and height in any unit.
 *
 * @example
 *   @include circle(6rem);
 */

@mixin circle($value) {
  width: $value;
  height: $value;
  border-radius: calc(#{$value} / 2);
}


/**
 * Margin mixin
 *
 * Use it, when you need similar margin only vertically or horizontally.
 *
 * @parameter {string} $direction - Use x for horizontally and y for vertically.
 * @parameter {string} $value - Amount of desired margin in any unit.
 *
 * @example
 *   @include margin(x, 1.5rem);
 */

@mixin margin($direction, $value) {
  @if ($direction == "x") {
    margin-right: $value;
    margin-left: $value;
  }

  @if ($direction == "y") {
    margin-top: $value;
    margin-bottom: $value;
  }
}


/**
 * Padding mixin
 *
 * Use it, when you need similar padding only vertically or horizontally.
 *
 * @parameter {string} $direction - Use x for horizontally and y for vertically.
 * @parameter {string} $value - Amount of desired padding in any unit.
 *
 * @example
 *   @include padding(x, 1.5rem);
 */

@mixin padding($direction, $value) {
  @if ($direction == "x") {
    padding-right: $value;
    padding-left: $value;
  }

  @if ($direction == "y") {
    padding-top: $value;
    padding-bottom: $value;
  }
}
